import numpy as np
import pandas as pd
import random
import seaborn as sns
import matplotlib.pyplot as plt

##################
## Statistics 2020
##################

df_2020 = pd.DataFrame(np.random.randint(2,size=(60, 6)), columns=list(['Analgesics', 'Antibiotic', 'Anticoagulant', 'Antidepressant', 'Anticancer', 'Antiepileptic']))

#print(df.head)
# sum by columns sum(axis=0)
#print(df_2020.sum())
# sum by rows sum(axis=1)
#print(df_2020.sum(axis=1))

# sum by rows sum(axis=1)
num_of_subs = df_2020.sum(axis=1)
#print(num_of_subs)

# value for less or more then two subscriptions 
sl3 = 100
sm3 = 120

# the generated value depens on the number of categories subscribed by the user
gen_val = [i*sl3 if i<3 else i*sm3 for i in num_of_subs] 
#print(gen_val)

#add coulumn of rows sums: total subscription
df_2020['Total'] = df_2020.sum(axis=1)

#add coulumn of rows sums: generated value
df_2020['Value'] = gen_val

# add column of random strings

regions = ['Italy', 'France', 'Switzerland', 'Austria', 'Slovenia']

df_2020['Region'] = random.choices(regions, k=60)

#print(df_2020.index)

# group subscriptions by regions 

#df = df.sort_values(by=['Region','Total subscriptions'])
group = df_2020.groupby('Region').agg('sum')

#print(group['Value'])

##################
## Statistics 2019
##################

sold = [30,24,23,19,12]
#product value 
pv = 150

data = {'Regions': regions, 'Sold': sold}

df_2019 = pd.DataFrame(data, index=regions)

# positions of the elements in an array
ind = np.arange(len(df_2019['Regions']))

#print(ind)
#print(df_2019)

# Value generated by the products sold
gen_value = [i*pv for i in df_2019['Sold']] 
df_2019['Value'] = gen_value

#print(gen_value)

# first the x-axis, second the y-axis
width = 0.4
# first the x-axis, second the y-axis, we use ind for refering to the position only
plt.bar(ind, group['Value'], width, label='Generated value 2020')
# ind+width moves the following bar of a space equal to width 
plt.bar(ind+width, df_2019['Value'], width, label='Generated value 2019')
plt.xlabel("Regions")
plt.ylabel("Products Sold")
plt.title("Sold per region and generated value")

# Get or set the current tick locations and labels of the x-axis.
plt.xticks(ind + width /2, df_2019['Regions'])
plt.legend(loc='best')
plt.show()

